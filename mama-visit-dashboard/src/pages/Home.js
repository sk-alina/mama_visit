import React, { useState, useRef, useEffect } from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Grid,
  Paper,
  Chip,
  Avatar,
  Button,
  Alert,
  LinearProgress,
  IconButton,
} from '@mui/material';
import {
  Favorite as FavoriteIcon,
  FlightTakeoff as FlightIcon,
  CalendarToday as CalendarIcon,
  LocationOn as LocationIcon,
  VideoLibrary as VideoIcon,
  CameraAlt as CameraIcon,
  CloudUpload as UploadIcon,
  Delete as DeleteIcon,
  AccessTime as TimeIcon,
} from '@mui/icons-material';
import { useWelcomeVideo } from '../hooks/useFirestore';

function Home() {
  const fileInputRef = useRef(null);
  
  // Use Firestore hook for persistent video storage
  const { 
    data: welcomeVideos, 
    loading: videoLoading, 
    error: videoError,
    addDocument: addVideo,
    updateDocument: updateVideo,
    deleteDocument: deleteVideo
  } = useWelcomeVideo();
  
  const [uploading, setUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [uploadError, setUploadError] = useState('');
  const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });
  
  // Get the current welcome video (there should only be one)
  const welcomeVideo = welcomeVideos.length > 0 ? welcomeVideos[0] : null;

  const tripDates = {
    start: '12 —Å–µ–Ω—Ç—è–±—Ä—è 2025',
    end: '29 —Å–µ–Ω—Ç—è–±—Ä—è 2025',
    duration: '18 –¥–Ω–µ–π'
  };

  // Countdown timer effect
  useEffect(() => {
    const tripStartDate = new Date('2025-09-12T00:00:00');
    
    const updateCountdown = () => {
      const now = new Date();
      const timeDiff = tripStartDate.getTime() - now.getTime();
      
      if (timeDiff > 0) {
        const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);
        
        setCountdown({ days, hours, minutes, seconds });
      } else {
        // Trip has started or ended
        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });
      }
    };

    updateCountdown();
    const interval = setInterval(updateCountdown, 1000);

    return () => clearInterval(interval);
  }, []);

  // Video upload functions
  const handleFileSelect = (event) => {
    const file = event.target.files[0];
    if (file) {
      handleVideoUpload(file);
    }
  };

  const handleVideoUpload = async (file) => {
    setUploadError('');
    setUploading(true);
    setUploadProgress(0);

    const maxSize = 100 * 1024 * 1024; // 100MB for welcome video
    const videoTypes = ['video/mp4', 'video/mov', 'video/avi', 'video/webm', 'video/quicktime'];

    if (file.size > maxSize) {
      setUploadError(`–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 100MB`);
      setUploading(false);
      return;
    }

    if (!videoTypes.includes(file.type)) {
      setUploadError(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: MP4, MOV, AVI, WebM`);
      setUploading(false);
      return;
    }

    try {
      // Simulate upload progress
      const interval = setInterval(() => {
        setUploadProgress(prev => {
          if (prev >= 90) {
            clearInterval(interval);
            return 90;
          }
          return prev + 10;
        });
      }, 200);

      const reader = new FileReader();
      reader.onload = async (e) => {
        try {
          const videoData = {
            name: file.name,
            type: file.type,
            size: file.size,
            url: e.target.result,
            uploadDate: new Date().toISOString(),
          };
          
          // If there's already a video, update it; otherwise, add new one
          if (welcomeVideo) {
            await updateVideo(welcomeVideo.id, videoData);
          } else {
            await addVideo(videoData);
          }
          
          setUploadProgress(100);
          setTimeout(() => {
            setUploading(false);
            setUploadProgress(0);
          }, 500);
        } catch (error) {
          console.error('Error saving video to Firebase:', error);
          setUploadError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∏–¥–µ–æ');
          setUploading(false);
          setUploadProgress(0);
        }
      };
      
      reader.readAsDataURL(file);
    } catch (error) {
      setUploadError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ');
      setUploading(false);
      setUploadProgress(0);
    }
  };

  const removeVideo = async () => {
    if (welcomeVideo) {
      try {
        await deleteVideo(welcomeVideo.id);
        setUploadError('');
      } catch (error) {
        console.error('Error deleting video:', error);
        setUploadError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∏–¥–µ–æ');
      }
    }
  };

  const openFileDialog = () => {
    fileInputRef.current?.click();
  };

  return (
    <Box sx={{ maxWidth: 1200, mx: 'auto' }}>
      {/* Welcome Header */}
      <Box sx={{ textAlign: 'center', mb: 4 }}>
        <Typography variant="h1" sx={{ mb: 2, color: 'primary.main' }}>
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –º–∞–º–æ—á–∫–∞! üíï
        </Typography>
        <Typography variant="h5" sx={{ color: 'text.secondary', mb: 3 }}>
          –ú—ã —Ç–∞–∫ —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –ø—Ä–∏–µ—Ö–∞–ª–∞ –∫ –Ω–∞–º –≤ –≥–æ—Å—Ç–∏!
        </Typography>
        <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap', mb: 3 }}>
          <Chip 
            icon={<CalendarIcon />} 
            label={`${tripDates.start} - ${tripDates.end}`}
            color="primary" 
            size="large"
          />
          <Chip 
            icon={<FlightIcon />} 
            label={tripDates.duration}
            color="secondary" 
            size="large"
          />
        </Box>

        {/* Countdown Timer */}
        {countdown.days > 0 || countdown.hours > 0 || countdown.minutes > 0 || countdown.seconds > 0 ? (
          <Card sx={{ maxWidth: 600, mx: 'auto', mb: 3 }}>
            <CardContent sx={{ textAlign: 'center', py: 3 }}>
              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>
                <TimeIcon sx={{ color: 'primary.main', mr: 1 }} />
                <Typography variant="h6" sx={{ color: 'primary.main' }}>
                  –î–æ –Ω–∞—á–∞–ª–∞ –ø–æ–µ–∑–¥–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å:
                </Typography>
              </Box>
              <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap' }}>
                <Box sx={{ textAlign: 'center' }}>
                  <Typography variant="h4" sx={{ color: 'secondary.main', fontWeight: 'bold' }}>
                    {countdown.days}
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    –¥–Ω–µ–π
                  </Typography>
                </Box>
                <Typography variant="h4" sx={{ color: 'text.secondary', mx: 1 }}>:</Typography>
                <Box sx={{ textAlign: 'center' }}>
                  <Typography variant="h4" sx={{ color: 'secondary.main', fontWeight: 'bold' }}>
                    {countdown.hours.toString().padStart(2, '0')}
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    —á–∞—Å–æ–≤
                  </Typography>
                </Box>
                <Typography variant="h4" sx={{ color: 'text.secondary', mx: 1 }}>:</Typography>
                <Box sx={{ textAlign: 'center' }}>
                  <Typography variant="h4" sx={{ color: 'secondary.main', fontWeight: 'bold' }}>
                    {countdown.minutes.toString().padStart(2, '0')}
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    –º–∏–Ω—É—Ç
                  </Typography>
                </Box>
                <Typography variant="h4" sx={{ color: 'text.secondary', mx: 1 }}>:</Typography>
                <Box sx={{ textAlign: 'center' }}>
                  <Typography variant="h4" sx={{ color: 'secondary.main', fontWeight: 'bold' }}>
                    {countdown.seconds.toString().padStart(2, '0')}
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    —Å–µ–∫—É–Ω–¥
                  </Typography>
                </Box>
              </Box>
            </CardContent>
          </Card>
        ) : (
          <Card sx={{ maxWidth: 600, mx: 'auto', mb: 3 }}>
            <CardContent sx={{ textAlign: 'center', py: 3 }}>
              <Typography variant="h5" sx={{ color: 'primary.main', mb: 1 }}>
                üéâ –ü–æ–µ–∑–¥–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! üéâ
              </Typography>
              <Typography variant="body1" sx={{ color: 'text.secondary' }}>
                –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤—Ä–µ–º–µ–Ω–µ–º –≤–º–µ—Å—Ç–µ!
              </Typography>
            </CardContent>
          </Card>
        )}
      </Box>

      <Grid container spacing={3}>
        {/* Video Message Section */}
        <Grid item xs={12} md={8}>
          <Card sx={{ height: '100%' }}>
            <CardContent sx={{ p: 3 }}>
              <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
                <Avatar sx={{ bgcolor: 'primary.main', mr: 2 }}>
                  <FavoriteIcon />
                </Avatar>
                <Typography variant="h4" sx={{ color: 'primary.main' }}>
                  –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–∞–º—ã
                </Typography>
              </Box>
              
              {/* Hidden file input */}
              <input
                type="file"
                ref={fileInputRef}
                onChange={handleFileSelect}
                accept="video/*"
                style={{ display: 'none' }}
                capture="environment" // Mobile camera
              />

              {/* Upload Progress */}
              {uploading && (
                <Box sx={{ mb: 2 }}>
                  <Typography variant="body2" sx={{ mb: 1 }}>
                    –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ... {Math.round(uploadProgress)}%
                  </Typography>
                  <LinearProgress variant="determinate" value={uploadProgress} />
                </Box>
              )}

              {/* Upload Error */}
              {(uploadError || videoError) && (
                <Alert severity="error" sx={{ mb: 2 }}>
                  {uploadError || videoError}
                </Alert>
              )}

              {/* Loading State */}
              {videoLoading && (
                <Box sx={{ mb: 2 }}>
                  <Typography variant="body2" sx={{ mb: 1 }}>
                    –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
                  </Typography>
                  <LinearProgress />
                </Box>
              )}

              {/* Video Display or Upload Area */}
              {welcomeVideo ? (
                <Box sx={{ position: 'relative' }}>
                  <Paper 
                    sx={{ 
                      height: 300, 
                      backgroundColor: 'black',
                      borderRadius: 2,
                      overflow: 'hidden',
                      position: 'relative',
                    }}
                  >
                    <video
                      src={welcomeVideo.url}
                      controls
                      style={{
                        width: '100%',
                        height: '100%',
                        objectFit: 'contain',
                      }}
                    />
                  </Paper>
                  
                  {/* Video Info and Controls */}
                  <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                    <Box>
                      <Typography variant="body1" sx={{ fontWeight: 'bold' }}>
                        {welcomeVideo.name}
                      </Typography>
                      <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                        –†–∞–∑–º–µ—Ä: {(welcomeVideo.size / (1024 * 1024)).toFixed(1)} MB
                      </Typography>
                    </Box>
                    <IconButton 
                      onClick={removeVideo} 
                      color="error"
                      sx={{ ml: 2 }}
                    >
                      <DeleteIcon />
                    </IconButton>
                  </Box>
                </Box>
              ) : (
                <Paper 
                  onClick={openFileDialog}
                  sx={{ 
                    height: 300, 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center',
                    backgroundColor: 'grey.100',
                    border: '2px dashed',
                    borderColor: 'primary.light',
                    borderRadius: 2,
                    cursor: 'pointer',
                    transition: 'all 0.3s ease',
                    '&:hover': {
                      backgroundColor: 'primary.light',
                      borderColor: 'primary.main',
                    }
                  }}
                >
                  <Box sx={{ textAlign: 'center', p: 3 }}>
                    <VideoIcon sx={{ fontSize: 60, color: 'primary.main', mb: 2 }} />
                    <Typography variant="h6" sx={{ color: 'primary.main', mb: 2 }}>
                      üìπ –ú–µ—Å—Ç–æ –¥–ª—è –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏—è
                    </Typography>
                    <Typography variant="body1" sx={{ color: 'text.secondary', mb: 2 }}>
                      –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–∞–º—ã
                    </Typography>
                    
                    {/* Upload Buttons */}
                    <Box sx={{ display: 'flex', gap: 1, justifyContent: 'center', flexWrap: 'wrap' }}>
                      <Button
                        variant="contained"
                        startIcon={<CameraIcon />}
                        onClick={(e) => {
                          e.stopPropagation();
                          openFileDialog();
                        }}
                        size="small"
                      >
                        –ö–∞–º–µ—Ä–∞
                      </Button>
                      <Button
                        variant="outlined"
                        startIcon={<UploadIcon />}
                        onClick={(e) => {
                          e.stopPropagation();
                          openFileDialog();
                        }}
                        size="small"
                      >
                        –ó–∞–≥—Ä—É–∑–∏—Ç—å
                      </Button>
                    </Box>
                  </Box>
                </Paper>
              )}
            </CardContent>
          </Card>
        </Grid>

        {/* Quick Info */}
        <Grid item xs={12} md={4}>
          <Card sx={{ height: '100%' }}>
            <CardContent sx={{ p: 3 }}>
              <Typography variant="h5" sx={{ mb: 3, color: 'secondary.main' }}>
                –ë—ã—Å—Ç—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </Typography>
              
              <Box sx={{ mb: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <LocationIcon sx={{ color: 'secondary.main', mr: 1 }} />
                  <Typography variant="h6">–ù–∞—à –∞–¥—Ä–µ—Å:</Typography>
                </Box>
                <Typography variant="body1" sx={{ ml: 4, color: 'text.secondary' }}>
                  22 Edgewater Circle<br />
                  Berlin, CT
                </Typography>
              </Box>

              <Box sx={{ mb: 3 }}>
                <Typography variant="h6" sx={{ mb: 2, color: 'secondary.main' }}>
                  üì± –¢–µ–ª–µ—Ñ–æ–Ω—ã:
                </Typography>
                <Typography variant="body1" sx={{ mb: 1 }}>
                  <strong>–î–æ—á–∫–∞ –∫—É–∫—É–Ω–µ—á–∫–∞:</strong> 510-417-6856
                </Typography>
                <Typography variant="body1">
                  <strong>–ê—Å–ø–µ–Ω:</strong> 413-205-7451
                </Typography>
              </Box>

              <Box>
                <Typography variant="h6" sx={{ mb: 2, color: 'secondary.main' }}>
                  ‚ù§Ô∏è –í–∞–∂–Ω–æ–µ:
                </Typography>
                <Typography variant="body2" sx={{ color: 'text.secondary', fontStyle: 'italic' }}>
                  –ú—ã –æ—á–µ–Ω—å –ª—é–±–∏–º —Ç–µ–±—è –∏ —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã —Ç—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞. 
                  –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω—É–∂–Ω–æ - –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏!
                </Typography>
              </Box>
            </CardContent>
          </Card>
        </Grid>

        {/* Welcome Message */}
        <Grid item xs={12}>
          <Card>
            <CardContent sx={{ p: 4, textAlign: 'center' }}>
              <Typography variant="h4" sx={{ mb: 3, color: 'primary.main' }}>
                –ú—ã —Ç–∞–∫ –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞! üåü
              </Typography>
              <Typography variant="body1" sx={{ fontSize: '1.2rem', lineHeight: 1.8, color: 'text.secondary' }}>
                –≠—Ç–æ—Ç —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–≤–æ–µ–≥–æ –≤–∏–∑–∏—Ç–∞. –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ: 
                –Ω–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∏–ª—å–µ –∏ –º–∞—à–∏–Ω–µ, –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–ø–∏—Å–µ–π –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏, 
                —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º —Å–¥–µ–ª–∞—Ç—å –≤–º–µ—Å—Ç–µ, –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
              </Typography>
              <Typography variant="body1" sx={{ fontSize: '1.2rem', lineHeight: 1.8, color: 'text.secondary', mt: 2 }}>
                –ú—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –∏ —Ö–æ—Ç–∏–º –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –≤—Å—ë —Å–∞–º–æ–µ –ª—É—á—à–µ–µ! 
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –¥–æ–º, –º–∞–º–æ—á–∫–∞! üíï
              </Typography>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Box>
  );
}

export default Home;
